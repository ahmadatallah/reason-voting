// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Reductive = require("reductive/lib/js/src/reductive.js");
var Middleware = require("./middleware.bs.js");
var SimpleStore = require("./simpleStore.bs.js");

function stringReduce(state, action) {
  if (action) {
    return state + "b";
  } else {
    return state + "a";
  }
}

function appReducer(state, action) {
  if (action.tag) {
    return /* record */[
            /* counter */SimpleStore.counter(state[/* counter */0], action[0]),
            /* notACounter */state[/* notACounter */1]
          ];
  } else {
    return /* record */[
            /* counter */state[/* counter */0],
            /* notACounter */stringReduce(state[/* notACounter */1], action[0])
          ];
  }
}

var store = Reductive.Store[/* create */0](appReducer, /* record */[
      /* counter */0,
      /* notACounter */""
    ], Middleware.logger, /* () */0);

exports.stringReduce = stringReduce;
exports.appReducer = appReducer;
exports.store = store;
/* store Not a pure module */
