// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Reductive = require("reductive/lib/js/src/reductive.js");
var SimpleStore = require("./simpleStore.bs.js");
var ComplexStore = require("./complexStore.bs.js");

var unsubscribe = Reductive.Store[/* subscribe */2](SimpleStore.store, (function (param) {
        console.log("store has updated");
        return /* () */0;
      }));

var partial_arg = Reductive.Store[/* dispatch */4];

function dispatch(param) {
  return partial_arg(SimpleStore.store, param);
}

dispatch(/* Increment */0);

dispatch(/* Increment */0);

dispatch(/* Increment */0);

dispatch(/* Decrement */1);

dispatch(/* Increment */0);

Reductive.Store[/* subscribe */2](SimpleStore.store, (function (param) {
        console.log(Reductive.Store[/* getState */5](SimpleStore.store));
        return /* () */0;
      }));

Reductive.Store[/* replaceReducer */6](SimpleStore.store, SimpleStore.doubleCounter);

dispatch(/* Increment */0);

unsubscribe(/* () */0);

dispatch(/* Increment */0);

dispatch(/* Increment */0);

dispatch(/* Increment */0);

dispatch(/* Increment */0);

dispatch(/* Increment */0);

dispatch(/* Increment */0);

Reductive.Store[/* subscribe */2](ComplexStore.store, (function (param) {
        console.log(Reductive.Store[/* getState */5](ComplexStore.store));
        return /* () */0;
      }));

Reductive.Store[/* dispatch */4](ComplexStore.store, /* StringAction */Block.__(0, [/* A */0]));

Reductive.Store[/* dispatch */4](ComplexStore.store, /* StringAction */Block.__(0, [/* B */1]));

Reductive.Store[/* dispatch */4](ComplexStore.store, /* CounterAction */Block.__(1, [/* Increment */0]));

exports.unsubscribe = unsubscribe;
exports.dispatch = dispatch;
/* unsubscribe Not a pure module */
